export async function fetchCSV(url:string){const res=await fetch(url,{cache:'no-cache'});if(!res.ok)throw new Error('CSV fetch failed');const text=await res.text();return parseCSV(text)}
export function parseCSV(text:string){const rows:string[][]=[];let cur='',row:string[]=[],inQuotes=false;for(let i=0;i<text.length;i++){const c=text[i];if(c==='"'){if(inQuotes&&text[i+1]==='"'){cur+='"';i++}else{inQuotes=!inQuotes}}else if(c===','&&!inQuotes){row.push(cur);cur=''}else if((c==='\n'||c==='\r')&&!inQuotes){if(cur!==''||row.length){row.push(cur);rows.push(row);row=[];cur=''}}else{cur+=c}}if(cur!==''||row.length){row.push(cur);rows.push(row)}const header=rows.shift()||[];return rows.map(cols=>Object.fromEntries(header.map((h,i)=>[h.trim(),(cols[i]||'').trim()]))) }
